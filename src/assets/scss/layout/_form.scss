//FORMKIT
.formkit-form{
    display: flex;
    flex-direction: column;
    border: none;
    row-gap: 25px;
    padding: 0;
}
.formkit-outer{
    display: flex;
    flex-direction: column;
    row-gap: 5px;

    label{
        text-transform: uppercase;
    }
}
.formkit-wrapper{
    display: flex;
    flex-direction: column;
}
.formkit-inner{
    background-color: #8B8B8B;
    color: black;
    border-radius: 10px;
    outline: none;
    width: 100%;
    min-height: 50px;
    display: flex;
}
.formkit-input{
    background: none;
    color: black;
    border-radius: 10px;
    padding: 10px;
    outline: none;
    width: 100%;
    //height: 100%;
}
textarea {
    min-height: 6em;
    min-width: 100%;
    max-width: 100%;
    border: none;
}
.formkit-message{
    color: var(--color__secondary);
}
.formkit-actions{
    width: 100%;
    .formkit-outer{
        width: 100%;
    }
    .formkit-wrapper{
        width: 100%;
    }
}
.formkit-input[type=submit]{
    background-color: var(--color__primary);
    padding: 20px;
    color: var(--color__text--bg_dark);
    border-radius: 10px;
    border: none;
    width: 100%;
    cursor: pointer;
}
.formkit-input[type=submit]:disabled,
.formkit-input[type=submit][disabled]{
  border: 1px solid #999999;
  background-color: #cccccc;
  color: #666666;
}
.formkit-suffix-icon:hover {
    color: var(--color__secondary);
}
.formkit-icon{
flex-grow: 0;
flex-shrink: 0;
display: flex;
align-self: stretch;
user-select: none;
    svg {
        path{
            stroke:  black;
          }
    }

}
.formkit-suffix-icon {
    cursor: pointer;
    width: 1.75em;
    padding-left: 0;
    padding-right: .75em;
}

.modalLoginRegister__change{
    cursor: pointer;
}
.form {
    display: flex;
    flex-direction: column;
    row-gap: 25px;
}
.form__failed{
    color: var(--color__secondary);
}
.form__fieldset {
    display: flex;
    flex-direction: column;
    border: none;
    row-gap: 35px;
    padding: 0;
}
.form__fieldset {
    legend {
        display: none;
    }
}
label {
    color: #8B8B8B;
    font-size: 13px;
}
.form__input {
    background-color: #8B8B8B;
    color: rgb(255, 255, 255);
    border-radius: 10px;
    padding: 10px;
    outline: none;
}
input[type=checkbox] {
    appearance: none;
    background: none;
    cursor: pointer;
    width: 20px;
    height: 20px;
    border: 2px solid #8B8B8B;
}
.form__field {
    display: flex;
    flex-direction: column;
    row-gap: 5px;

    label{
        text-transform: uppercase;
    }
}
.form__label-checkbox {
    display: flex;
    align-items: center;
    column-gap: 5px;
    width: fit-content;
}
.form__submit {
    background-color: var(--color__primary);
    padding: 20px;
    color: var(--color__text--bg_dark);
    border-radius: 10px;
    border: none;
    width: 100%;
}
.forgot-password {
    align-self: flex-end;
    cursor: pointer;
}
.checkbox {
    --background: #2c2c2c;
    --border: #ececec;
    --border-hover: #dfdfdf;
    --border-active: #2c2c2c;
    --tick: #fff;
    position: relative;
    input,
    svg {
        width: 21px;
        height: 21px;
        display: block;
    }
    input {
        -webkit-appearance: none;
        -moz-appearance: none;
        position: relative;
        outline: none;
        background: var(--background);
        border: none;
        margin: 0;
        padding: 0;
        cursor: pointer;
        border-radius: 4px;
        transition: box-shadow .3s;
        box-shadow: inset 0 0 0 var(--s, 1px) var(--b, var(--border));
        &:hover {
            --s: 2px;
            --b: var(--border-hover);
        }
        &:checked {
            --b: var(--border-active);
        }
    }
    svg {
        pointer-events: none;
        fill: none;
        stroke-width: 2px;
        stroke-linecap: round;
        stroke-linejoin: round;
        stroke: var(--stroke, var(--border-active));
        position: absolute;
        top: 0;
        left: 0;
        width: 21px;
        height: 21px;
        transform: scale(var(--scale, 1)) translateZ(0);
    }
    &.path {
        input {
            &:checked {
                --s: 2px;
                transition-delay: .4s;
                & + svg {
                    --a: 16.1 86.12;
                    --o: 102.22;
                }
            }
        }
        svg {
            stroke-dasharray: var(--a, 86.12);
            stroke-dashoffset: var(--o, 86.12);
            transition: stroke-dasharray .6s, stroke-dashoffset .6s;
        }
    }
    &.bounce {
        --stroke: var(--tick);
        input {
            &:checked {
                --s: 11px;
                & + svg {
                    animation: bounce .4s linear forwards .2s;
                }
            }
        }
        svg {
            --scale: 0;
        }
    }
}

@keyframes bounce {
    50% {
        transform: scale(1.2);
    }
    75% {
        transform: scale(.9);
    }
    100% {
        transform: scale(1);
    }
}