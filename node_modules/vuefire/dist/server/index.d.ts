import { App as App$1 } from 'firebase-admin/app';
import { FirebaseApp } from 'firebase/app';
import { App } from 'vue-demi';
import { User } from 'firebase/auth';
import { UserRecord } from 'firebase-admin/auth';
import { App as App$2 } from 'vue';
import { c as _Nullable } from '../shared-565bf8c7.js';
import 'firebase/firestore';

/**
 * Adds AppCheck using the Firebase Admin SDK. This is necessary on the Server if you have configured AppCheck on the
 * client.
 *
 * @param adminApp - firebase-admin app
 * @param firebaseApp - firebase/app initializeApp()
 * @param param2 options
 */
declare function VueFireAppCheckServer(app: App, adminApp: App$1, firebaseApp: FirebaseApp, { ttlMillis, }?: {
    ttlMillis?: number;
}): void;

declare function VueFireAuthServer(firebaseApp: FirebaseApp, app: App$2, userRecord: _Nullable<User>): void;
/**
 * Creates a user object that is compatible with the client but will throw errors when its functions are used as they
 * shouldn't be called within in the server.
 *
 * @param userRecord - user data from firebase-admin
 */
declare function createServerUser(userRecord: _Nullable<UserRecord>): _Nullable<User>;

export { VueFireAppCheckServer, VueFireAuthServer, createServerUser };
